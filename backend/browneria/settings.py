"""
Django settings for browneria project.

Generated by 'django-admin startproject' using Django 3.1.4.

For more information on this file, see
https://docs.djangoproject.com/en/3.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.1/ref/settings/
"""
from datetime import timedelta
from pathlib import Path

#
# Paths and dirs
#

BASE_DIR = Path(__file__).resolve().parent.parent


#
# Default account model
#

AUTH_USER_MODEL = 'account.User'


#
# SECURITY
#

SECRET_KEY = 'yzrqal#)_e#h37n#t6-)&=^w0=*2ryeg47he(t75^+g4p=pmbv'
DEBUG = True

#
# Application definition
#

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'account',
    'product',
]

#
# Middleware
#

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'corsheaders.middleware.CorsPostCsrfMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

#
# Authentication
#

REST_FRAMEWORK = {
    'DEFAULT_PERMISSION_CLASSES': (
        'rest_framework.permissions.IsAuthenticated',
    ),
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework_simplejwt.authentication.JWTAuthentication',
    ),
}

SIMPLE_JWT = {
    'ACCESS_TOKEN_LIFETIME': timedelta(hours=12),
    'REFRESH_TOKEN_LIFETIME': timedelta(days=7),
}


#
# Templates
#

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates']
        ,
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

#
# Origins, Domains and Endpoints
#

CORS_ALLOW_CREDENTIALS = True
SESSION_COOKIE_DOMAIN = None
WSGI_APPLICATION = 'browneria.wsgi.application'
ROOT_URLCONF = 'browneria.urls'
ALLOWED_HOSTS = ['*']
CORS_ORIGIN_ALLOW_ALL = True
CORS_ORIGIN_WHITELIST = ['http://localhost:8000', 'http://127.0.0.1:8000', '[::1]:8000']
CSRF_TRUSTED_ORIGINS = ALLOWED_HOSTS

#
# Database
#

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'browneria',
        'USER': 'browneria_app',
        'PASSWORD': 'dZT74Y3RP&xPb&Fx',
        'HOST': 'postgres',
        'PORT': '5432',
    }
}


#
# Admin
#

ADMINS = (
    ('Thiago Leal Pozati', 'thiagoleal11@gmail.com'),
)

ADMIN_PASSWORD = 'admin'


#
# Password
#

PASSWORD_HASHERS = [
    'django.contrib.auth.hashers.Argon2PasswordHasher',
    'django.contrib.auth.hashers.PBKDF2PasswordHasher',
    'django.contrib.auth.hashers.PBKDF2SHA1PasswordHasher',
    'django.contrib.auth.hashers.BCryptSHA256PasswordHasher',
    'django.contrib.auth.hashers.BCryptPasswordHasher',
]

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


#
# Internationalization
#

LANGUAGE_CODE = 'en-us'
TIME_ZONE = 'UTC'
USE_I18N = True
USE_L10N = True
USE_TZ = True


#
# Static files (CSS, JavaScript, Images)
#

STATIC_ROOT = BASE_DIR.joinpath('static')
STATIC_URL = '/static/'

MEDIA_ROOT = BASE_DIR.joinpath('media')
MEDIA_URL = '/media/'
