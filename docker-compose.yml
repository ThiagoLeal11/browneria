version: '3'
services:
#  web:
#    restart: unless-stopped
#    image: node:14.15.1
#    command: yarn start
#    volumes:
#      - ./frontend/:/home/app/web/
#    working_dir: /home/app/web/
#    ports:
#      - 3000:3000
#    networks:
#      - nginx_network

  api:
    restart: unless-stopped
    build:
      context: ./backend
      dockerfile: ../docker/django/Dockerfile
    container_name: browneria_app
    command: gunicorn --bind 0.0.0.0:8000 --workers 1 browneria.wsgi:application
    volumes:
      - static_volume:/home/app/static/
      - media_volume:/home/app/media/
      - ./backend/:/home/app/api/
    ports:
      - 8000:8000
    depends_on:
      - postgres
    networks:
#      - nginx_network
      - postgres_network

  postgres:
    image: postgres:11
    restart: unless-stopped
    container_name: browneria_postgres
    networks:
      - postgres_network
    volumes:
      - postgres_volume:/var/lib/postgresql/data/
    env_file:
      - ./docker/postgres/db.env

#  nginx:
#    image: nginx:latest
#    restart: unless-stopped
#    container_name: browneria_nginx
#    ports:
#      - 4000:80
#    volumes:
#      - static_volume:/home/app/static/
#      - media_volume:/home/app/media/
#      - ./docker/nginx/conf.d:/etc/nginx/conf.d
#    depends_on:
#      - api
#      - web
#    networks:
#      - nginx_network
#    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"

networks:
#  nginx_network:
#    driver: bridge

  postgres_network:
    driver: bridge

volumes:
  postgres_volume:
  static_volume:
  media_volume:
